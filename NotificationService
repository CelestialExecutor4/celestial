print("This script uses a module owned by xyzbullet on github, check him out!")

local TweenService = game:GetService("TweenService")

getgenv().Notify = function(titleText, messageText, displayTime, options, buttonText, buttonCallback)
    options = options or {}

    local backgroundColor = options.backgroundColor or Color3.fromRGB(30, 30, 30)
    local borderRadius = options.borderRadius or 10
    local titleColor = options.titleColor or Color3.fromRGB(255, 255, 255)
    local messageColor = options.messageColor or Color3.fromRGB(255, 255, 255)
    local buttonColor = options.buttonColor or Color3.fromRGB(0, 122, 255)  -- Blue button color
    local buttonTextColor = options.buttonTextColor or Color3.fromRGB(255, 255, 255)

    local GUI = Instance.new("ScreenGui")
    local Main = Instance.new("Frame", GUI)
    local title = Instance.new("TextLabel", Main)
    local message = Instance.new("TextLabel", Main)
    local closeButton = nil

    GUI.Name = "NotificationGUI"
    GUI.Parent = game.CoreGui

    Main.Name = "MainFrame"
    Main.BackgroundColor3 = backgroundColor
    Main.BorderSizePixel = 0
    Main.Position = UDim2.new(1, 5, 0, 50)
    Main.Size = UDim2.new(0, 350, 0, 120)
    Main.ClipsDescendants = true

    -- Apply the corner radius to the Main frame
    local corner = Instance.new("UICorner", Main)
    corner.CornerRadius = UDim.new(0, borderRadius)

    title.Name = "Title"
    title.BackgroundTransparency = 1
    title.Size = UDim2.new(1, 0, 0, 35)
    title.Font = Enum.Font.GothamBold
    title.Text = titleText
    title.TextColor3 = titleColor
    title.TextSize = 24
    title.TextWrapped = true
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Position = UDim2.new(0, 10, 0, 5)

    message.Name = "Message"
    message.BackgroundTransparency = 1
    message.Size = UDim2.new(1, -20, 1, -40)
    message.Position = UDim2.new(0, 10, 0, 40)
    message.Font = Enum.Font.Gotham
    message.Text = messageText
    message.TextColor3 = messageColor
    message.TextSize = 18
    message.TextWrapped = true
    message.TextXAlignment = Enum.TextXAlignment.Left
    message.TextYAlignment = Enum.TextYAlignment.Top

    -- Optional button creation (raised it a bit higher)
    if buttonText and buttonCallback then
        local button = Instance.new("TextButton", Main)
        button.Name = "Button"
        button.Size = UDim2.new(1, -20, 0, 40)
        button.Position = UDim2.new(0, 10, 0, 70)  -- Raised position
        button.BackgroundColor3 = buttonColor
        button.TextColor3 = buttonTextColor
        button.Text = buttonText
        button.Font = Enum.Font.GothamBold
        button.TextSize = 18
        button.TextWrapped = true
        button.TextXAlignment = Enum.TextXAlignment.Center
        button.TextYAlignment = Enum.TextYAlignment.Center

        button.MouseButton1Click:Connect(function()
            buttonCallback()
            GUI:Destroy()  -- Close the notification after button click
        end)
    end

    -- Add the close "X" button
    closeButton = Instance.new("TextButton", Main)
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -40, 0, 10)  -- Positioned at top-right
    closeButton.BackgroundTransparency = 1
    closeButton.Text = "X"
    closeButton.TextColor3 = Color3.fromRGB(255, 0, 0)  -- Red color for the close button
    closeButton.TextSize = 24
    closeButton.Font = Enum.Font.GothamBold

    closeButton.MouseButton1Click:Connect(function()
        -- Close the notification with a smooth animation
        local closeTween = TweenService:Create(Main, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Position = UDim2.new(1, 5, 0, 50)})
        closeTween:Play()
        wait(0.4)
        GUI:Destroy()  -- Destroy the notification after the animation
    end)

    -- Hover effect to show the close button
    Main.MouseEnter:Connect(function()
        closeButton.Visible = true
    end)

    Main.MouseLeave:Connect(function()
        closeButton.Visible = false
    end)

    -- Animation setup for opening the UI (smooth transition)
    local openPosition = UDim2.new(1, -360, 0, 50)
    local closePosition = UDim2.new(1, 5, 0, 50)
    
    local openTween = TweenService:Create(Main, TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = openPosition})
    local closeTween = TweenService:Create(Main, TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Position = closePosition})

    -- Show the notification
    openTween:Play()

    -- Wait for the display time, then remove the notification if not closed
    wait(displayTime)

    -- Close the notification if it wasn't closed by user interaction
    closeTween:Play()
    wait(0.6)
    GUI:Destroy()
end
